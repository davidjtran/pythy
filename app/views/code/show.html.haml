- title raw @page_title

#summary-area
  .clearfix

    .pull-left
      %h3.slim
        = raw @page_title
    .pull-right
      %span#save-indicator.text-success.hide
        Saved

      .btn-group
        = button_tag id: 'sync', class: 'btn btn-warning hide',
          rel: 'tooltip', title: 'Automatic updates stop when you start typing, so that the instructor\'s typing doesn\'t clobber yours. Click this button to pull the instructor\'s latest version and resume automatic updates.',
          data: { placement: 'bottom' } do
          = icon_tag('refresh') + ' Sync'

      .btn-group
        = button_tag id: 'run', class: 'btn btn-success', rel: 'tooltip', title: 'Run your code and see its output' do
          = icon_tag('play') + ' Run'
        - if @repository.is_a? AssignmentReferenceRepository
          = link_to edit_assignment_path(@repository.assignment), id: 'edit', class: 'btn', rel: 'tooltip', title: 'Edit this assignment' do
            = icon_tag('pencil') + ' Edit'
        - if @repository.is_a? AssignmentRepository
          = button_tag id: 'check', class: 'btn', rel: 'tooltip', disabled: @repository.assignment_offering.closed?, title: 'Check your work to see how well you are doing', data: { :'loading-text' => "#{icon_tag('spinner icon-spin')} Checking..." } do
            = icon_tag('magic') + ' Check'
          = button_tag id: 'more-options', class: 'btn dropdown-toggle', disabled: @repository.assignment_offering.closed?, data: { toggle: 'dropdown' } do
            = icon_tag('cog')
            %span.caret
          %ul.dropdown-menu.pull-right
            %li
              %a{ href: '#', id: 'start-over' }
                = icon_tag('remove') + ' Start over...'

  .summary-content
    = raw @summary

- # TODO improve the logic used to control the visibility for this;
- # we probably want certain repositories to have "advanced file controls"
- # enabled and some to have them disabled
- #
- # FIXME I'm seriously not proud of this code, but deadlines are approaching.
- # I'm putting this comment here so future generations don't think this is
- # how I usually roll. This UI right now only supports a two-level-deep file
- # organization with folders at the top level and files in those folders. I
- # deem it good enough for me to set up assignments I need for class.
- if @repository.is_a? AssignmentReferenceRepository
  #file-bar
    %ul.nav.nav-pills
      %li.disabled
        %a Files:
      - @repository.ls('.').each do |e|
        - if File.directory?(File.join(@repository.git_path, e))
          - children = @repository.ls(e)
          %li.dropdown
            %a.dropdown-toggle{ href: '#', data: { toggle: 'dropdown' } }
              = icon_tag('folder-open-alt')
              = e
              %span.caret
            %ul.dropdown-menu
              - unless children.empty?
                - children.each do |child|
                  %li
                    %a{ href: code_path(@repository, File.join(e, child)) }
                      = icon_tag('file')
                      = child
                %li.divider
              %li
                %a#create-file{ href: '#', data: { dir: e } } Create a new file...
              %li
                %a#upload-file{ href: '#', data: { dir: e } } Upload a file...
        - else
          %li
            %a{ href: code_path(@repository, e) }
              = icon_tag('file')
              = e


-# #history-bar
-#  %input{ id: 'history-slider', type: 'slider', value: @hashes[-1] }
#code-area
  = text_area_tag :codearea

= render partial: 'console'
= render partial: 'sidebar'
= render partial: 'subscribe'
